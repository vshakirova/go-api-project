basePath: /api/v1
definitions:
  models.User:
    properties:
      address:
        type: string
      job:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
  description: Swagger API for Golang Project
  title: Project Swagger API
  version: "1.0"
paths:
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - BasicAuth: []
      summary: Retrieves all users
    post:
      consumes:
      - application/json
      parameters:
      - description: User Info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      security:
      - BasicAuth: []
      summary: Creates user based on user info
  /users/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - BasicAuth: []
      summary: Delete user by ID
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - BasicAuth: []
      summary: Retrieves user based on given ID
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - BasicAuth: []
      summary: Update user info based on given ID
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
